class Queue
    private:
        var arr[]
        var head
        var tail
        var size

    public:
        // time complexity O(1) || space complexity O(n)
        constructor Queue(var size)
            this.size = size
            arr = NEW ARRAY OF INTEGER WITH SIZE size
            head = 0
            tail = -1

        // time complexity O(1) || space complexity O(1)
        function isEmpty() -> BOOLEAN
            return head > tail
        end funtion

        // time complexity O(1) || space complexity O(1)
        function isFull() -> BOOLEAN
            return tail == size - 1
        end function

        // time complexity O(1) || space complexity O(1)
        function Enqueue(var x)
            if isFull() then
                return
            end if
            tail = tail + 1
            arr[tail] = x
        end function

        // time complexity O(n) || space complexity O(1)
        function Dequeue()
            if isEmpty() then
                return
            end if
            tail = tail - 1
            for i = head to tail
                arr[i] = arr[i + 1]
            end for
        end function

        // time complexity O(1) || space complexity O(1)
        function getHead()
            return arr[head]
        end function

        // time complexity O(n) || space complexity O(1)
        function print()
            fpr i = head to tail
                print arr[i] + " "
            end for
            print newline
        end function
end class
